First error trying to connect to Heroku's SSL endpoint:

    bundle exec puppet agent --test \
      --server puppethero.herokuapp.com \
      --masterport=443
    Error: Could not request certificate: SSL_connect returned=1 errno=0 \
     state=SSLv3 read server certificate B: certificate verify failed: \
     [unable to get local issuer certificate for \
     /C=US/O=DigiCert Inc/OU=www.digicert.com/CN=DigiCert SHA2 High Assurance Server CA]

I was able to overcome this error by using a large bundle for the localcacert
option, but encountered a new error related to the CRL:

    bundle exec puppet agent --test \
      --server puppethero.herokuapp.com \
      --masterport=443 \
      --localcacert resources/ca-bundle.crt
    Warning: SSL_connect returned=1 errno=0 state=SSLv3 read server certificate\
    B: certificate verify failed: [unable to get certificate CRL for \
    /C=US/ST=California/L=San Francisco/O=Heroku, Inc./CN=*.herokuapp.com]

This too was easy to overcome by disabling CRL checking with the
--no-certificate_revocation option, but alas a new SSL error emerged:

    bundle exec puppet agent --test \
      --server puppethero.herokuapp.com \
      --masterport=443 \
      --localcacert resources/ca-bundle.crt \
      --no-certificate_revocation
    SSL_connect returned=1 errno=0 state=SSLv3 read server certificate \
    B: certificate verify failed: [wrong public key type]

At this point I'm struggling because the agent always replaces the localcacert
file, which I manually created as a bundle containing the DigiCert root and
intermediate, with the Puppet CA certificate which has nothing to do with
Heroku's load balancer.  I'm going to try and address this problem by wrapping
the rack application with a middleware that intercepts
`/puppet-ca/v1/certificate/ca` requests and returns the heroku appropriate
bundle.
